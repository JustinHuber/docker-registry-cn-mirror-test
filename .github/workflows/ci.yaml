on:
  push:
    branches:
      - master  # 仅在 master 分支推送时触发
  schedule:
    - cron: '0 0 */1 * *'  # 每天凌晨执行
  workflow_dispatch:  # 手动触发

name: Test Registry

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Install Docker via Official Setup
        uses: docker/setup-buildx-action@v2
      - run: docker version
      - run: docker info
      - name: Test
        run: |
          registrys="
          dockerhub.timeweb.cloud
          docker.ketches.cn
          docker.m.daocloud.io
          docker.io
          dockerproxy.net
          hub.rat.dev
          hub.1panel.dev
          hub.docker.com
          registry.docker.com
          registry-1.docker.io
          mirror.gcr.io
          "
          image="stilleshan/frpc:latest"
          
          # 创建临时文件存储有效registry
          valid_registries_file=$(mktemp)

          for registry in $registrys
          do
             echo ::group::Test $registry/$image
             if docker pull $registry/$image; then
                echo -e "\033[32m$registry is good\033[0m"
                echo "::warning file=README.md,line=1,col=0::OK [ $registry ] is good"
                # 将有效registry写入文件
                echo "$registry" >> "$valid_registries_file"
             else
                echo -e "\033[31m$registry is outdated\033[0m"
                echo "::error file=README.md,line=1,col=0::X [ $registry ] is outdated"
             fi
             docker rmi $registry/$image || true
             echo ::endgroup::
          done
          
          # 更新registrys列表为仅包含有效的registry
          registrys=$(cat "$valid_registries_file")
          rm "$valid_registries_file"
          
          # 输出更新后的有效registry列表
          echo "::group::有效Registry列表"
          echo "$registrys"
          echo "::endgroup::"
          IMAGE=busybox
          MIRROR=https://dockerhub.icu
          NUM_TRIALS=5

          echo "Testing $MIRROR with $IMAGE"

          total_time=0

          for i in $(seq 1 $NUM_TRIALS); do
          echo "Trial $i"
          start_time=$(date +%s.%N)
          docker pull $IMAGE
          end_time=$(date +%s.%N)
          elapsed_time=$(echo "$end_time - $start_time" | bc)
          total_time=$(echo "$total_time + $elapsed_time" | bc)
          docker rmi $IMAGE
          done

          average_time=$(echo "scale=2; $total_time / $NUM_TRIALS" | bc)
          echo "::warning $MIRROR is ok Average pull time: $average_time seconds "
        env:
          ALIYUN_MIRROR: ${{secrets.ALIYUN_MIRROR}}
